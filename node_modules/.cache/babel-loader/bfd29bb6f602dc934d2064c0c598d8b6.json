{"ast":null,"code":"var _jsxFileName = \"/Users/limziyang/Documents/GitHub/My-website/frontend/src/Projects/Dialog.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Link from \"@material-ui/core/Link\";\nconst useStyles = makeStyles(theme => ({\n  dialogTitle: {\n    display: \"flex\",\n    justifyContent: \"spaceBetween\",\n    alignItems: \"center\"\n  },\n  imageHolder: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(5)\n  },\n  image: {\n    width: 750,\n    height: 180,\n    [theme.breakpoints.down(\"sm\")]: {\n      width: 550,\n      height: 140\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      width: 400,\n      height: 100\n    }\n  },\n  rolesHolder: {\n    marginTop: theme.spacing(5),\n    marginBottom: theme.spacing(5)\n  },\n  roleTitle: {\n    marginBottom: theme.spacing(2)\n  },\n  techstack: {\n    marginBottom: theme.spacing(2)\n  },\n  icons: {\n    height: 40,\n    width: 40,\n    marginRight: theme.spacing(2)\n  },\n  linkHolder: {\n    marginTop: theme.spacing(5)\n  },\n  linkButtons: {\n    margin: theme.spacing(1)\n  }\n}));\nexport default function ScrollDialog({\n  open,\n  title,\n  image,\n  description,\n  roles,\n  links,\n  techStack,\n  handleClose\n}) {\n  const descriptionElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (open) {\n      const {\n        current: descriptionElement\n      } = descriptionElementRef;\n\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n  const classes = useStyles();\n  console.log(links);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    maxWidth: \"md\",\n    scroll: \"body\",\n    \"aria-labelledby\": \"scroll-dialog-title\",\n    \"aria-describedby\": \"scroll-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"scroll-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, title)), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.imageHolder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: image !== null ? image.showcase : null,\n    className: classes.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(DialogContentText, {\n    id: \"scroll-dialog-description\",\n    ref: descriptionElementRef,\n    tabIndex: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, description), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.rolesHolder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    id: \"scroll-dialog-roles\",\n    ref: descriptionElementRef,\n    tabIndex: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.roleTitle,\n    variant: \"h5\",\n    color: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, \"My Role:\", \" \"), roles.map(role => /*#__PURE__*/React.createElement(Typography, {\n    className: classes.techstack,\n    variant: \"body1\",\n    component: \"p\",\n    color: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, \"- \", role)))), /*#__PURE__*/React.createElement(DialogContentText, {\n    id: \"scroll-dialog-techStack\",\n    ref: descriptionElementRef,\n    tabIndex: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.techstack,\n    variant: \"h5\",\n    component: \"p\",\n    color: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, \"Tech Stack:\"), techStack.map(icon => /*#__PURE__*/React.createElement(Tooltip, {\n    title: icon.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: icon.img,\n    className: classes.icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.linkHolder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, links.map(link => /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    className: classes.linkButtons,\n    target: \"_blank\",\n    color: \"primary\",\n    href: link.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, link.name))))));\n}","map":{"version":3,"sources":["/Users/limziyang/Documents/GitHub/My-website/frontend/src/Projects/Dialog.js"],"names":["React","makeStyles","Typography","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Tooltip","Chip","Link","useStyles","theme","dialogTitle","display","justifyContent","alignItems","imageHolder","marginTop","spacing","marginBottom","image","width","height","breakpoints","down","rolesHolder","roleTitle","techstack","icons","marginRight","linkHolder","linkButtons","margin","ScrollDialog","open","title","description","roles","links","techStack","handleClose","descriptionElementRef","useRef","useEffect","current","descriptionElement","focus","classes","console","log","showcase","map","role","icon","name","img","link"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport Chip from \"@material-ui/core/Chip\";\nimport Link from \"@material-ui/core/Link\";\n\nconst useStyles = makeStyles((theme) => ({\n  dialogTitle: {\n    display: \"flex\",\n    justifyContent: \"spaceBetween\",\n    alignItems: \"center\",\n  },\n\n  imageHolder: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(5),\n  },\n\n  image: {\n    width: 750,\n    height: 180,\n    [theme.breakpoints.down(\"sm\")]: {\n      width: 550,\n      height: 140,\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      width: 400,\n      height: 100,\n    },\n  },\n  rolesHolder: {\n    marginTop: theme.spacing(5),\n    marginBottom: theme.spacing(5),\n  },\n  roleTitle: {\n    marginBottom: theme.spacing(2),\n  },\n  techstack: {\n    marginBottom: theme.spacing(2),\n  },\n  icons: {\n    height: 40,\n    width: 40,\n    marginRight: theme.spacing(2),\n  },\n  linkHolder: {\n    marginTop: theme.spacing(5),\n  },\n  linkButtons: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function ScrollDialog({\n  open,\n  title,\n  image,\n  description,\n  roles,\n  links,\n  techStack,\n  handleClose,\n}) {\n  const descriptionElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (open) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n  const classes = useStyles();\n  console.log(links);\n  return (\n    <div>\n      {/* <Button onClick={handleClickOpen(\"paper\")}>scroll=paper</Button> */}\n      {/* <Button onClick={handleClickOpen}>scroll=body</Button> */}\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        maxWidth=\"md\"\n        scroll=\"body\"\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        {/*---------- Title ----------*/}\n        <DialogTitle id=\"scroll-dialog-title\">\n          <Typography variant=\"h3\">{title}</Typography>\n        </DialogTitle>\n        <DialogContent>\n          {/*---------- Showcase Image ----------*/}\n          <div className={classes.imageHolder}>\n            <img\n              src={image !== null ? image.showcase : null}\n              className={classes.image}\n            />\n          </div>\n\n          {/*---------- Description ----------*/}\n          <DialogContentText\n            id=\"scroll-dialog-description\"\n            ref={descriptionElementRef}\n            tabIndex={-1}\n          >\n            {description}\n          </DialogContentText>\n\n          {/*---------- My Role ----------*/}\n          <div className={classes.rolesHolder}>\n            <DialogContentText\n              id=\"scroll-dialog-roles\"\n              ref={descriptionElementRef}\n              tabIndex={-1}\n            >\n              <Typography\n                className={classes.roleTitle}\n                variant=\"h5\"\n                color=\"default\"\n              >\n                My Role:{\" \"}\n              </Typography>\n              {roles.map((role) => (\n                <Typography\n                  className={classes.techstack}\n                  variant=\"body1\"\n                  component=\"p\"\n                  color=\"default\"\n                >\n                  - {role}\n                </Typography>\n              ))}\n            </DialogContentText>\n          </div>\n\n          {/*---------- Tech Stack ----------*/}\n          <DialogContentText\n            id=\"scroll-dialog-techStack\"\n            ref={descriptionElementRef}\n            tabIndex={-1}\n          >\n            <Typography\n              className={classes.techstack}\n              variant=\"h5\"\n              component=\"p\"\n              color=\"default\"\n            >\n              Tech Stack:\n            </Typography>\n            {techStack.map((icon) => (\n              <Tooltip title={icon.name}>\n                <img src={icon.img} className={classes.icons} />\n              </Tooltip>\n            ))}\n          </DialogContentText>\n\n          {/*---------- Links ----------*/}\n          <div className={classes.linkHolder}>\n            {links.map((link) => (\n              <Button\n                variant=\"contained\"\n                className={classes.linkButtons}\n                target=\"_blank\"\n                color=\"primary\"\n                href={link.link}\n              >\n                {link.name}\n              </Button>\n            ))}\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}