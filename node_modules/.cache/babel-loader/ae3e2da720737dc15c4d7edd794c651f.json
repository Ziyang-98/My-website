{"ast":null,"code":"var _jsxFileName = \"/Users/limziyang/Documents/GitHub/My-website/frontend/src/Projects/Dialog.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nconst useStyles = makeStyles(theme => ({\n  imageHolder: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(5)\n  },\n  image: {\n    width: 750,\n    height: 180,\n    [theme.breakpoints.down(\"sm\")]: {\n      width: 550,\n      height: 140\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      width: 400,\n      height: 100\n    }\n  },\n  icons: {\n    height: 40,\n    width: 40,\n    marginRight: theme.spacing(2)\n  }\n}));\nexport default function ScrollDialog({\n  open,\n  title,\n  image,\n  description,\n  links,\n  techStack,\n  handleClose\n}) {\n  const descriptionElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (open) {\n      const {\n        current: descriptionElement\n      } = descriptionElementRef;\n\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    maxWidth: \"md\",\n    scroll: \"body\",\n    \"aria-labelledby\": \"scroll-dialog-title\",\n    \"aria-describedby\": \"scroll-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"scroll-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, title)), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.imageHolder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    className: classes.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(DialogContentText, {\n    id: \"scroll-dialog-description\",\n    ref: descriptionElementRef,\n    tabIndex: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, description), /*#__PURE__*/React.createElement(DialogContentText, {\n    id: \"scroll-dialog-description\",\n    ref: descriptionElementRef,\n    tabIndex: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"p\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Tech Stack:\"), techStack.map(icon => /*#__PURE__*/React.createElement(Tooltip, {\n    title: icon.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: icon.img,\n    className: classes.icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  })))))));\n}","map":{"version":3,"sources":["/Users/limziyang/Documents/GitHub/My-website/frontend/src/Projects/Dialog.js"],"names":["React","makeStyles","Typography","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Tooltip","useStyles","theme","imageHolder","display","alignItems","justifyContent","marginTop","spacing","marginBottom","image","width","height","breakpoints","down","icons","marginRight","ScrollDialog","open","title","description","links","techStack","handleClose","descriptionElementRef","useRef","useEffect","current","descriptionElement","focus","classes","map","icon","name","img"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst useStyles = makeStyles((theme) => ({\n  imageHolder: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(5),\n  },\n\n  image: {\n    width: 750,\n    height: 180,\n    [theme.breakpoints.down(\"sm\")]: {\n      width: 550,\n      height: 140,\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      width: 400,\n      height: 100,\n    },\n  },\n  icons: {\n    height: 40,\n    width: 40,\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function ScrollDialog({\n  open,\n  title,\n  image,\n  description,\n  links,\n  techStack,\n  handleClose,\n}) {\n  const descriptionElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (open) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n  const classes = useStyles();\n\n  return (\n    <div>\n      {/* <Button onClick={handleClickOpen(\"paper\")}>scroll=paper</Button> */}\n      {/* <Button onClick={handleClickOpen}>scroll=body</Button> */}\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        maxWidth=\"md\"\n        scroll=\"body\"\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogTitle id=\"scroll-dialog-title\">\n          <Typography variant=\"h2\">{title}</Typography>\n        </DialogTitle>\n        <DialogContent>\n          <div className={classes.imageHolder}>\n            <img src={image} className={classes.image} />\n          </div>\n          <DialogContentText\n            id=\"scroll-dialog-description\"\n            ref={descriptionElementRef}\n            tabIndex={-1}\n          >\n            {description}\n          </DialogContentText>\n          <DialogContentText\n            id=\"scroll-dialog-description\"\n            ref={descriptionElementRef}\n            tabIndex={-1}\n          >\n            <Typography variant=\"h5\" component=\"p\" color=\"primary\">\n              Tech Stack:\n            </Typography>\n            {techStack.map((icon) => (\n              <Tooltip title={icon.name}>\n                <img src={icon.img} className={classes.icons} />\n              </Tooltip>\n            ))}\n          </DialogContentText>\n        </DialogContent>\n        {/* <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Subscribe\n          </Button>\n        </DialogActions> */}\n      </Dialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}