{"ast":null,"code":"var _jsxFileName = \"/Users/limziyang/Documents/GitHub/My-website/frontend/src/Projects/Dialog.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nconst useStyles = makeStyles(theme => ({\n  imageHolder: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: theme.spacing(5),\n    marginBottom: theme.spacing(5)\n  },\n  image: {\n    width: 700,\n    height: 180\n  }\n}));\nexport default function ScrollDialog({\n  open,\n  title,\n  image,\n  description,\n  links,\n  techStack,\n  handleClose\n}) {\n  //   const [scroll, setScroll] = React.useState(\"paper\");\n  //   const [open, setOpen] = React.useState(false);\n  //   const handleClickOpen = () => () => {\n  //     setOpen(true);\n  //     setScroll(scrollType);\n  //   };\n  //   const handleClose = () => {\n  //     setOpen(false);\n  //   };\n  const descriptionElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (open) {\n      const {\n        current: descriptionElement\n      } = descriptionElementRef;\n\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    maxWidth: \"md\",\n    scroll: \"body\",\n    \"aria-labelledby\": \"scroll-dialog-title\",\n    \"aria-describedby\": \"scroll-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"scroll-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.imageHolder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    className: classes.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(DialogContentText, {\n    id: \"scroll-dialog-description\",\n    ref: descriptionElementRef,\n    tabIndex: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, description)), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Subscribe\"))));\n}","map":{"version":3,"sources":["/Users/limziyang/Documents/GitHub/My-website/frontend/src/Projects/Dialog.js"],"names":["React","makeStyles","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useStyles","theme","imageHolder","display","alignItems","justifyContent","marginTop","spacing","marginBottom","image","width","height","ScrollDialog","open","title","description","links","techStack","handleClose","descriptionElementRef","useRef","useEffect","current","descriptionElement","focus","classes"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst useStyles = makeStyles((theme) => ({\n  imageHolder: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: theme.spacing(5),\n    marginBottom: theme.spacing(5),\n  },\n\n  image: {\n    width: 700,\n    height: 180,\n  },\n}));\n\nexport default function ScrollDialog({\n  open,\n  title,\n  image,\n  description,\n  links,\n  techStack,\n  handleClose,\n}) {\n  //   const [scroll, setScroll] = React.useState(\"paper\");\n  //   const [open, setOpen] = React.useState(false);\n\n  //   const handleClickOpen = () => () => {\n  //     setOpen(true);\n  //     setScroll(scrollType);\n  //   };\n\n  //   const handleClose = () => {\n  //     setOpen(false);\n  //   };\n\n  const descriptionElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (open) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n  const classes = useStyles();\n\n  return (\n    <div>\n      {/* <Button onClick={handleClickOpen(\"paper\")}>scroll=paper</Button> */}\n      {/* <Button onClick={handleClickOpen}>scroll=body</Button> */}\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        maxWidth=\"md\"\n        scroll=\"body\"\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogTitle id=\"scroll-dialog-title\">{title}</DialogTitle>\n        <DialogContent>\n          <div className={classes.imageHolder}>\n            <img src={image} className={classes.image} />\n          </div>\n          <DialogContentText\n            id=\"scroll-dialog-description\"\n            ref={descriptionElementRef}\n            tabIndex={-1}\n          >\n            {description}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Subscribe\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}